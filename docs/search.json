{"Protocols/AnyFlowRepresentable.html#/s:15DynamicWorkflow20AnyFlowRepresentableP20preferredLaunchStyleAA16PresentationTypeOvp":{"name":"preferredLaunchStyle","abstract":"<p>preferredLaunchStyle: Gives the ability for a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/FlowRepresentable.html\">FlowRepresentable</a></code> to describe how it best shows up. For example a view can claim it preferrs to be launched in a navigationStack</p>","parent_name":"AnyFlowRepresentable"},"Protocols/AnyFlowRepresentable.html#/s:15DynamicWorkflow20AnyFlowRepresentableP8workflowAA0B0CSgvp":{"name":"workflow","abstract":"<p>workflow: Access to the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Workflow.html\">Workflow</a></code> controlling the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/FlowRepresentable.html\">FlowRepresentable</a></code>. A common use case may be a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/FlowRepresentable.html\">FlowRepresentable</a></code> that wants to abandon the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Workflow.html\">Workflow</a></code> it&rsquo;s in.</p>","parent_name":"AnyFlowRepresentable"},"Protocols/AnyFlowRepresentable.html#/s:15DynamicWorkflow20AnyFlowRepresentableP8instanceAaB_pyFZ":{"name":"instance()","abstract":"<p>instance: A method to return an instance of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/FlowRepresentable.html\">FlowRepresentable</a></code></p>","parent_name":"AnyFlowRepresentable"},"Protocols/Presenter.html#/s:15DynamicWorkflow9PresenterP8ViewTypeQa":{"name":"ViewType","abstract":"<p>ViewType: The type your presenter deals with (e.g. UIViewController)</p>","parent_name":"Presenter"},"Protocols/Presenter.html#/s:15DynamicWorkflow9PresenterP6launch4view4from15withLaunchStyley8ViewTypeQz_AiA012PresentationK0OtF":{"name":"launch(view:from:withLaunchStyle:)","abstract":"<p>launch: A method to let the presenter know it needs to present a view</p>","parent_name":"Presenter"},"Protocols/FlowRepresentable.html#/s:15DynamicWorkflow17FlowRepresentableP10IntakeTypeQa":{"name":"IntakeType","abstract":"<p>IntakeType: The data type required to be passed to your FlowRepresentable (use <code>Any?</code> if you don&rsquo;t care)</p>","parent_name":"FlowRepresentable"},"Protocols/FlowRepresentable.html#/s:15DynamicWorkflow17FlowRepresentableP10shouldLoad4withSb10IntakeTypeQz_tF":{"name":"shouldLoad(with:)","abstract":"<p>shouldLoad: A method indicating whether it makes sense for this view to load in a workflow</p>","parent_name":"FlowRepresentable"},"Protocols/FlowRepresentable.html":{"name":"FlowRepresentable","abstract":"<p>FlowRepresentable: A typed version of &lsquo;AnyFlowRepresentable&rsquo;. Use this on views that you want to add to a workflow.</p>"},"Protocols/Presenter.html":{"name":"Presenter","abstract":"<p>Presenter: Used in the event you want to create your own kind of presenter.</p>"},"Protocols/AnyFlowRepresentable.html":{"name":"AnyFlowRepresentable","abstract":"<p>AnyFlowRepresentable: A type erased version of &lsquo;FlowRepresentable&rsquo;. Generally speaking don&rsquo;t use this directly, use FlowRepresentable instead.</p>"},"Enums/PresentationType.html#/s:15DynamicWorkflow16PresentationTypeO15navigationStackyA2CmF":{"name":"navigationStack","abstract":"<p>navigationStack: Indicates a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/FlowRepresentable.html\">FlowRepresentable</a></code> should be launched in a navigation stack of some kind (For example with UIKit this would use a UINavigationController)</p>","parent_name":"PresentationType"},"Enums/PresentationType.html#/s:15DynamicWorkflow16PresentationTypeO7modallyyA2CmF":{"name":"modally","abstract":"<p>modally: Indicates a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/FlowRepresentable.html\">FlowRepresentable</a></code> should be launched modally</p>","parent_name":"PresentationType"},"Enums/PresentationType.html#/s:15DynamicWorkflow16PresentationTypeO7defaultyA2CmF":{"name":"default","abstract":"<p>default: Indicates a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/FlowRepresentable.html\">FlowRepresentable</a></code> can be launched contextually</p>","parent_name":"PresentationType"},"Enums/PresentationType.html":{"name":"PresentationType","abstract":"<p>PresentationType: An enum that indicates how FlowRepresentables should be presented</p>"},"Classes/Workflow.html#/s:15DynamicWorkflow0B0C7abandon8animated8onFinishySb_yycSgtF":{"name":"abandon(animated:onFinish:)","abstract":"<p>abandon: Called when the workflow should be terminated, and the app should return to the point before the workflow was launched</p>","parent_name":"Workflow"},"Classes.html#/s:15DynamicWorkflow14UIWorkflowItemC":{"name":"UIWorkflowItem","abstract":"<p>UIWorkflowItem: A subclass of UIViewController designed for convenience. This does <strong>NOT</strong> have to be used, it simply removes some of the overhead that normally comes with a FlowRepresentable.</p>"},"Classes/Workflow.html":{"name":"Workflow","abstract":"<p>Workflow: A doubly linked list of AnyFlowRepresentable types. Can be used to create a user flow.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"}}